DEL 1: TESTNING AF FUNDE EGENVÆRDIER
Først testes vores funktioner på to matricer, hvor resultaterne holdes op i mod GSL's gsl_eigen_symm funktion

Vi starter med at kigge på en simpel matrice(n=5 og ingen ens indgange) som denne
         1          0          1          0          0 
         0          2          2          0          0 
         1          2          9          4          5 
         0          0          4          4          0 
         0          0          5          0          5 

Vi har startet med at bruge gsl_eigen_symm på denne, for at se hvad vi forventer at finde
 -0.747659 
   1.11594 
   2.34296 
   4.42914 
   13.8596 

Med følgende start gæt
       -20 
       1.1 
       2.2 
       4.4 
        20 

Får vi fra guess
 -0.747659 
   1.11594 
   2.34296 
   4.42914 
   13.8596 

Hvilket er meget tilfredsstillende.

Med vores default routine med m=0 får vi
 -0.747657 
   1.11594 
   2.34296 
   4.42914 
   13.8596 

Hvilket også er meget tilfredsstillende.

Og til sidst får vi igen det ønskede med vores GSL routione
 -0.747973 
   1.11573 
   2.34278 
   4.42771 
   13.8582 

Alle var med en eps=0.00001

Vi prøver nu med n=20 og hvor alle indgange er der to gange.
         1          0          0          0          0          1          0          0          0          0          0          0          0          0          0          0          0          0          0          0 
         0          2          0          0          0          2          0          0          0          0          0          0          0          0          0          0          0          0          0          0 
         0          0          3          0          0          3          0          0          0          0          0          0          0          0          0          0          0          0          0          0 
         0          0          0          4          0          4          0          0          0          0          0          0          0          0          0          0          0          0          0          0 
         0          0          0          0          5          5          0          0          0          0          0          0          0          0          0          0          0          0          0          0 
         1          2          3          4          5         18          7          8          9         10          1          2          3          4          5          6          7          8          9         10 
         0          0          0          0          0          7          7          0          0          0          0          0          0          0          0          0          0          0          0          0 
         0          0          0          0          0          8          0          8          0          0          0          0          0          0          0          0          0          0          0          0 
         0          0          0          0          0          9          0          0          9          0          0          0          0          0          0          0          0          0          0          0 
         0          0          0          0          0         10          0          0          0         10          0          0          0          0          0          0          0          0          0          0 
         0          0          0          0          0          1          0          0          0          0          1          0          0          0          0          0          0          0          0          0 
         0          0          0          0          0          2          0          0          0          0          0          2          0          0          0          0          0          0          0          0 
         0          0          0          0          0          3          0          0          0          0          0          0          3          0          0          0          0          0          0          0 
         0          0          0          0          0          4          0          0          0          0          0          0          0          4          0          0          0          0          0          0 
         0          0          0          0          0          5          0          0          0          0          0          0          0          0          5          0          0          0          0          0 
         0          0          0          0          0          6          0          0          0          0          0          0          0          0          0          6          0          0          0          0 
         0          0          0          0          0          7          0          0          0          0          0          0          0          0          0          0          7          0          0          0 
         0          0          0          0          0          8          0          0          0          0          0          0          0          0          0          0          0          8          0          0 
         0          0          0          0          0          9          0          0          0          0          0          0          0          0          0          0          0          0          9          0 
         0          0          0          0          0         10          0          0          0          0          0          0          0          0          0          0          0          0          0         10 

Vi starter igen med at bruge gsl_eigen_symm på denne, for at se hvad vi forventer at finde
  -14.6997 
         1 
   1.01851 
         2 
   2.05976 
         3 
   3.11254 
         4 
   4.17493 
         5 
   5.26466 
   6.16456 
         7 
   7.33681 
         8 
   8.43422 
         9 
   9.55653 
        10 
   40.5772 

Med følgende start gæt
       -20 
     1.001 
       1.1 
     2.001 
       2.2 
     3.001 
       3.3 
     4.001 
      4.25 
     5.001 
       5.3 
       6.2 
     7.001 
      7.45 
     8.001 
       8.5 
     9.001 
       9.5 
    10.001 
        45 

Får vi fra guess
  -14.6997 
  0.999657 
   1.01883 
   1.99991 
   2.05977 
   2.99996 
   3.11257 
   3.99998 
   4.17494 
   4.99999 
   5.26466 
   6.16456 
   6.99999 
   7.33682 
         8 
   8.43423 
   9.00001 
   9.55655 
        10 
   40.5772 

Igen et meget tilfredsstillende resultat, men det er også et godt gæt, og man ser de steder, hvor vi netop har dobbelt indgange,
at denne metode ikke retunere svaret lige så præcist som de andre metoder

Med vores default routine med m=0 får vi
  -14.6997 
         1 
   1.01851 
         2 
       nan 
         3 
   3.11254 
         4 
   4.17494 
         5 
   5.26467 
   6.16456 
         7 
   7.33681 
         8 
   8.43422 
         9 
   9.55653 
        10 
   40.5772 

Her misser vi en enkelt egenværdi, hvilket ikke er overraskende, da den er meget tæt på grænsen (2.05976 i forhold til 2).
Prøve vi dog igen med m=1, hvilket svarer til at gætte igen, ser vi, at vi finder alle egenværdier
  -14.6997 
         1 
   1.01851 
         2 
   2.05976 
         3 
   3.11254 
         4 
   4.17494 
         5 
   5.26467 
   6.16456 
         7 
   7.33681 
         8 
   8.43422 
         9 
   9.55653 
        10 
   40.5772 

Og til sidst får vi igen det ønskede med vores GSL rutine
  -14.6964 
         1 
   1.01808 
         2 
   2.05959 
         3 
   3.11232 
         4 
   4.17384 
         5 
   5.26368 
   6.16604 
         7 
   7.33788 
         8 
   8.43356 
         9 
   9.55852 
        10 
   40.5785 

Alle var igen med en eps=0.00001

Et plot af første test kan ses på test.png.


DEL 2: TIDSTAGNING SOM TEST AF ANTAL OPERATIONER
Vi prøver her at laver tilfældige dannes D og u'er af henholdvis n=1000 og n=10000, og tager tid på vores rutine.
Dette er for at opbevise os om at vi bruger O(n^2) operationer, da en stigning i n på 10 burde så medfører en stigning i tid på 100.
Vi undersøger kun vores default metode, med m=0 da denne også svarer til vores guess metode, dog måske lidt langsomere pga. sorteringen af D's indgange

DEL 3: m-AFHÆNGIGHED FOR DEFAULT METODEN
Det tog for n=1000 så lang tid at nå i mål: 
 0.085254 s. 
For n=10000 tog det så lang tid: 
 8.25399 s. 
De to delt med hinanden giver: 
 96.8165. 
Så en stigning på 10 i n gør det hele ca 100 gange langsommere, hvilket antyder at vi når i mål på O(n^2) operationer
Som en sidste ting har vi undersøgt effektivitetten af default metoden, både i forhold til følsomheden over for
størrelsen af intervaller, og som funktion af m. Resultatet kan ses på figur effektivitet.png, hvor der er dannet
tre tilfældige matricer mellem større og større intervaler, og hvor m stiger løbende. Det ses effektivitetten stiger
og at metoden fungere bedst for storre intervaller. Matricerne der testes på er af størrelse n=1000
